#include <unistd.h>

/**
 * @brief 计算字符串的长度
 *
 * 此函数用于计算给定字符串 `str` 的长度，不包括空字符（`\0`）。该函数通过遍历字符串中的每个字符，直到遇到空字符为止，返回字符串的字符数。
 * 
 * @param str 指向一个以空字符结尾的字符串的指针。
 * 
 * @return 如果字符串为空，则返回0；否则返回字符串的长度（不包括空字符）。
 */
size_t my_strlen(char *str);

/**
 * @brief 比较两个字符串是否相等
 *
 * 此函数通过逐个字符地比较两个字符串 `str1` 和 `str2` 是否相等。如果两个字符串的长度不相等，直接返回 1，表示不相等。如果长度相同，则逐字符比较，遇到不同字符时返回 1，表示不相等。如果所有字符都相同，则返回 0，表示两个字符串相等。
 * 
 * @param str1 第一个字符串。
 * @param str2 第二个字符串。
 * 
 * @return 如果字符串相等，返回0；如果字符串不相等，返回1。
 */
int my_strcmp(char *str1, char *str2);

/**
 * @brief 创建字符串的副本
 *
 * 该函数接收一个字符串 `str`，并为其分配新的内存空间，将原字符串的内容复制到新分配的内存中，
 * 然后返回这个新字符串的指针。返回的字符串与原始字符串相同，但存储在不同的内存地址。
 *
 * @param str 要复制的字符串。
 * 
 * @return 返回新字符串的指针。如果内存分配失败，则返回 `NULL`。
 */
char *my_strcp(char *str);

/**
 * @brief 将目录路径和文件名连接成一个完整的路径
 *
 * 该函数将两个字符串 `dir`（目录路径）和 `file`（文件名）连接成一个完整的路径。如果 `dir` 已经以 `/` 结尾，则直接连接 `file`；如果 `dir` 没有 `/` 结尾，则会在两者之间添加一个 `/`。最终返回一个新的字符串，表示完整路径。
 *
 * @param dir 目录路径字符串。
 * @param file 文件名字符串。
 * @return 返回一个新的字符串，表示完整的路径。该字符串需要调用者负责释放内存。
 */
char *my_concate(char *dir, char *file);
